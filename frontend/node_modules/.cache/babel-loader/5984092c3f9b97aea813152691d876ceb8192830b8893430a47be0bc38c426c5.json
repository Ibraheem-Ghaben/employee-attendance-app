{"ast":null,"code":"/**\n * Overtime API Service\n */\n\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Get auth token from localStorage\nconst getAuthToken = () => {\n  return localStorage.getItem('token');\n};\n\n// Create axios instance with auth\nconst api = axios.create({\n  baseURL: API_URL\n});\napi.interceptors.request.use(config => {\n  const token = getAuthToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// ============================================================\n// Pay Configuration API\n// ============================================================\n\nexport const getEmployeePayConfig = async employeeCode => {\n  const response = await api.get(`/overtime/config/${employeeCode}`);\n  return response.data.data;\n};\nexport const updateEmployeePayConfig = async (employeeCode, config) => {\n  const response = await api.post(`/overtime/config/${employeeCode}`, config);\n  return response.data.data;\n};\nexport const getAllPayConfigs = async () => {\n  const response = await api.get('/overtime/config');\n  return response.data.data;\n};\n\n// ============================================================\n// Calculation API\n// ============================================================\n\nexport const calculateTimesheets = async request => {\n  const response = await api.post('/overtime/calculate', request);\n  return response.data;\n};\nexport const calculateEmployeeTimesheets = async (employeeCode, fromDate, toDate, forceRecalculate = false) => {\n  const response = await api.post(`/overtime/calculate/${employeeCode}`, {\n    from_date: fromDate,\n    to_date: toDate,\n    force_recalculate: forceRecalculate\n  });\n  return response.data;\n};\n\n// ============================================================\n// Reports API\n// ============================================================\n\nexport const getWeeklyReport = async (fromDate, toDate, employeeCode) => {\n  const params = {\n    from_date: fromDate,\n    to_date: toDate\n  };\n  if (employeeCode) {\n    params.employee_code = employeeCode;\n  }\n  const response = await api.get('/overtime/reports/weekly', {\n    params\n  });\n  return response.data.data;\n};\nexport const exportWeeklyReport = async (fromDate, toDate, employeeCode) => {\n  const params = {\n    from_date: fromDate,\n    to_date: toDate\n  };\n  if (employeeCode) {\n    params.employee_code = employeeCode;\n  }\n  const response = await api.get('/overtime/reports/weekly/export', {\n    params,\n    responseType: 'blob'\n  });\n  return response.data;\n};\nexport const getTimesheetDays = async (employeeCode, fromDate, toDate) => {\n  const params = {\n    from_date: fromDate,\n    to_date: toDate\n  };\n  const response = await api.get(`/overtime/timesheet/${employeeCode}`, {\n    params\n  });\n  return response.data.data;\n};\n\n// ============================================================\n// Helper Functions\n// ============================================================\n\nexport const downloadExcelFile = (blob, filename) => {\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  window.URL.revokeObjectURL(url);\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getAuthToken","localStorage","getItem","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization","getEmployeePayConfig","employeeCode","response","get","data","updateEmployeePayConfig","post","getAllPayConfigs","calculateTimesheets","calculateEmployeeTimesheets","fromDate","toDate","forceRecalculate","from_date","to_date","force_recalculate","getWeeklyReport","params","employee_code","exportWeeklyReport","responseType","getTimesheetDays","downloadExcelFile","blob","filename","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL"],"sources":["/home/administrator/employee_attendance_app/frontend/src/services/overtimeApi.ts"],"sourcesContent":["/**\n * Overtime API Service\n */\n\nimport axios from 'axios';\nimport {\n  EmployeePayConfig,\n  TimesheetDay,\n  WeeklyReportSummary,\n  CalculationRequest,\n  CalculationResponse,\n} from '../types/overtime';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Get auth token from localStorage\nconst getAuthToken = (): string | null => {\n  return localStorage.getItem('token');\n};\n\n// Create axios instance with auth\nconst api = axios.create({\n  baseURL: API_URL,\n});\n\napi.interceptors.request.use((config) => {\n  const token = getAuthToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// ============================================================\n// Pay Configuration API\n// ============================================================\n\nexport const getEmployeePayConfig = async (employeeCode: string): Promise<EmployeePayConfig> => {\n  const response = await api.get(`/overtime/config/${employeeCode}`);\n  return response.data.data;\n};\n\nexport const updateEmployeePayConfig = async (\n  employeeCode: string,\n  config: Partial<EmployeePayConfig>\n): Promise<EmployeePayConfig> => {\n  const response = await api.post(`/overtime/config/${employeeCode}`, config);\n  return response.data.data;\n};\n\nexport const getAllPayConfigs = async (): Promise<EmployeePayConfig[]> => {\n  const response = await api.get('/overtime/config');\n  return response.data.data;\n};\n\n// ============================================================\n// Calculation API\n// ============================================================\n\nexport const calculateTimesheets = async (\n  request: CalculationRequest\n): Promise<CalculationResponse> => {\n  const response = await api.post('/overtime/calculate', request);\n  return response.data;\n};\n\nexport const calculateEmployeeTimesheets = async (\n  employeeCode: string,\n  fromDate: string,\n  toDate: string,\n  forceRecalculate: boolean = false\n): Promise<CalculationResponse> => {\n  const response = await api.post(`/overtime/calculate/${employeeCode}`, {\n    from_date: fromDate,\n    to_date: toDate,\n    force_recalculate: forceRecalculate,\n  });\n  return response.data;\n};\n\n// ============================================================\n// Reports API\n// ============================================================\n\nexport const getWeeklyReport = async (\n  fromDate: string,\n  toDate: string,\n  employeeCode?: string\n): Promise<WeeklyReportSummary[]> => {\n  const params: any = {\n    from_date: fromDate,\n    to_date: toDate,\n  };\n  \n  if (employeeCode) {\n    params.employee_code = employeeCode;\n  }\n  \n  const response = await api.get('/overtime/reports/weekly', { params });\n  return response.data.data;\n};\n\nexport const exportWeeklyReport = async (\n  fromDate: string,\n  toDate: string,\n  employeeCode?: string\n): Promise<Blob> => {\n  const params: any = {\n    from_date: fromDate,\n    to_date: toDate,\n  };\n  \n  if (employeeCode) {\n    params.employee_code = employeeCode;\n  }\n  \n  const response = await api.get('/overtime/reports/weekly/export', {\n    params,\n    responseType: 'blob',\n  });\n  \n  return response.data;\n};\n\nexport const getTimesheetDays = async (\n  employeeCode: string,\n  fromDate: string,\n  toDate: string\n): Promise<TimesheetDay[]> => {\n  const params = {\n    from_date: fromDate,\n    to_date: toDate,\n  };\n  \n  const response = await api.get(`/overtime/timesheet/${employeeCode}`, { params });\n  return response.data.data;\n};\n\n// ============================================================\n// Helper Functions\n// ============================================================\n\nexport const downloadExcelFile = (blob: Blob, filename: string) => {\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  window.URL.revokeObjectURL(url);\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}